{"version":3,"file":"static/js/473.1ddccf14.chunk.js","mappings":"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","sources":["Modal.js","screens/Cart.js","components/Navbar.js","screens/Signup.js"],"sourcesContent":["import React from 'react'\nimport ReactDom from 'react-dom'\n\nconst MODAL_STYLES = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  backgroundColor: 'rgb(34,34,34)',\n  transform: 'translate(-50%, -50%)',\n  zIndex: 1000,\n  height: '90%',\n  width: '90%'\n}\n\nconst OVERLAY_STYLES = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: 'rgba(0, 0, 0, .7)',\n  zIndex: 1000\n}\n\nexport default function Modal({ children, onClose }) {\n\n  return ReactDom.createPortal(\n    <>\n      <div style={OVERLAY_STYLES} />\n      <div style={MODAL_STYLES}>\n        <button className='btn bg-danger fs-4' style={{ marginLeft: \"90%\", marginTop: \"-35px\" }} onClick={onClose}> X </button>\n        {children}\n      </div>\n    </>,\n    document.getElementById('cart-root')\n  )\n}","import React from \"react\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport { useCart, useDispatchCart } from \"../components/ContextReducer\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport useRazorpay from \"react-razorpay\";\n\nexport default function Cart() {\n  const [Razorpay] = useRazorpay();\n  const navigate = useNavigate();\n  let data = useCart();\n  let dispatch = useDispatchCart();\n  if (data.length === 0) {\n    return (\n      <div>\n        <div className=\"m-5 w-100 text-center text-light fs-3\">\n          The Cart is Empty!\n        </div>\n      </div>\n    );\n  }\n  function inrToPaise(amountInRupees) {\n    // Ensure the input is a valid number\n    if (isNaN(amountInRupees)) {\n      return \"Please enter a valid number for INR\";\n    }\n\n    // Convert INR to paise (1 INR = 100 paise)\n    const amountInPaise = amountInRupees * 100;\n\n    return amountInPaise;\n  }\n  const handleCheckOut = async () => {\n    let userEmail = localStorage.getItem(\"userEmail\");\n\n    let response = await fetch(\"https://techtastebackend.onrender.com/api/auth/orderData\", {\n\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        order_data: data,\n        email: userEmail,\n        order_date: new Date().toDateString(),\n      }),\n    });\n    console.log(\"JSON RESPONSE:::::\", response.status);\n    if (response.status === 200) {\n      dispatch({ type: \"DROP\" });\n      toast.success(\"Order Successfull!\");\n      navigate(\"/myorder  \");\n\n      // window.location.reload();\n    }\n  };\n  const myFun = (orderId) => {\n    var options = {\n      \"key\": \"rzp_test_N7iKIbYFI3runu\", // Enter the Key ID generated from the Dashboard\n      \"amount\": \"1\", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n      \"currency\": \"INR\",\n      \"name\": \"Tech taste\", //your business name\n      \"description\": \"Test Transaction\",\n      \"image\": \"https://i.ibb.co/qYFbR0M/Screenshot-2024-03-06-001657.png\",\n      \"order_id\": orderId, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n      \"handler\": function (response) {\n        // alert(response.razorpay_payment_id);\n        // alert(response.razorpay_order_id);\n        // alert(response.razorpay_signature)\n        if (response.razorpay_order_id) {\n          handleCheckOut()\n        } else {\n          alert(\"something went wrong\")\n        }\n      },\n      \"prefill\": { //We recommend using the prefill parameter to auto-fill customer's contact information, especially their phone number\n        \"name\": \"Meenakshi Sharma\", //your customer's name\n        \"email\": \"exampleemail.com\",\n        \"contact\": \"8320506797\"  //Provide the customer's phone number for better conversion rates \n      },\n      \"method\": \"googlepay\",\n      \"notes\": {\n        \"address\": \"Razorpay Corporate Office\"\n      },\n      \"theme\": {\n        \"color\": \"#3399cc\"\n      }\n    };\n    var rzp1 = new Razorpay(options);\n    rzp1.open();\n\n  }\n  const PaymentStartFunc = async (amount) => {\n    try {\n      await axios.post(\"https://techtastebackend.onrender.com/api/auth/razorpay-order-create\", { amount: inrToPaise(amount) }).then((res) => {\n        const orderData = res.data.order\n\n        if (orderData) {\n          console.log(orderData.id);\n          myFun(orderData.id)\n        }\n      }).catch((err) => {\n        console.log(err);\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  let totalPrice = data.reduce((total, food) => total + food.price, 0);\n  return (\n    <div>\n\n      <div className=\"container m-auto mt-5 table-responsive  table-responsive-sm table-responsive-md\">\n        <table className=\"table table-hover \">\n          <thead className=\" text-success fs-4\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Option</th>\n              <th scope=\"col\">Amount</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((food, index) => (\n              <tr>\n                <th scope=\"row\" className=\"text-light\">\n                  {index + 1}\n                </th>\n                <td className=\"text-light\">{food.name}</td>\n                <td className=\"text-light\">{food.qty}</td>\n                <td className=\"text-light\">{food.size}</td>\n                <td className=\"text-light\">{food.price}</td>\n                <td className=\"text-light\">\n                  <button type=\"button\" className=\"btn p-0 text-light\">\n                    <Delete\n                      onClick={() => {\n                        dispatch({ type: \"REMOVE\", index: index });\n                        toast.success(\"removed from the cart\");\n                      }}\n                    />\n                  </button>{\" \"}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div>\n          <h1 className=\"fs-2 text-success\">Total Price: {totalPrice}/-</h1>\n        </div>\n        <div>\n          <button className=\"btn bg-success mt-5 \" onClick={() => PaymentStartFunc(totalPrice)}>\n            {\" \"}\n            Order Now{\" \"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-no-undef */\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport { useCart } from \"./ContextReducer\";\nimport Modal from \"../Modal\";\nimport Cart from \"../screens/Cart\";\nimport { toast } from \"react-toastify\";\nexport default function Navbar(props) {\n  const [cartView, setCartView] = useState(false);\n  localStorage.setItem(\"temp\", \"first\");\n  let navigate = useNavigate();\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isAdmin\");\n    navigate(\"/login\");\n    toast.success(\"see you soon!\")\n  };\n\n  const loadCart = () => {\n    setCartView(true);\n  };\n  const adminChek = localStorage.getItem(\"isAdmin\")\n\n  let adMinroute\n\n  if (adminChek === true) {\n    adMinroute = <>\n      <Link\n        className=\"nav-link fs-5 mx-3 active\"\n        aria-current=\"page\"\n        to=\"/allorders\"\n      >\n        All Orders\n      </Link>\n    </>\n  } else if (adminChek === false) {\n    adMinroute = \"no\"\n  }\n\n  const deleteOrders = async () => {\n\n    if (window.confirm(\"sure you want to delete all orders ?\") == true) {\n      await fetch(\"https://techtastebackend.onrender.com/allordersdelete\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then(() => {\n        toast.success(\"Orders Deleted\")\n        window.location.reload()\n      });\n    } else {\n      toast.success(\"Canceled\")\n    }\n\n  }\n  const items = useCart();\n  return (\n    <div>\n      <nav\n        className=\"navbar navbar-expand-lg navbar-dark  position-sticky\"\n        style={{\n          boxShadow: \"0px 10px 20px black\",\n          filter: \"blur(20)\",\n          position: \"fixed\",\n          zIndex: \"10\",\n          width: \"100%\",\n          backgroundColor: \"#0b325a\",\n        }}\n      >\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand fs-1 \" to=\"/\">\n            <b>Tech Taste</b>\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link\n                  className=\"nav-link fs-5 mx-3 active\"\n                  aria-current=\"page\"\n                  to=\"/\"\n                >\n                  Home\n                </Link>{\" \"}\n                {/* index.css - nav-link color white */}\n              </li>\n              {localStorage.getItem(\"token\") ? (\n                <>\n                  <li className=\"nav-item\">\n                    <Link\n                      className=\"nav-link fs-5 mx-3 active\"\n                      aria-current=\"page\"\n                      to=\"/myorder\"\n                    >\n                      My Orders\n                    </Link>{\" \"}\n                    {/* index.css - nav-link color white */}\n                  </li>\n\n                </>\n              ) : (\n                \"\"\n              )}\n              {adminChek === \"true\" ? <>\n                <Link\n                  className=\"nav-link fs-5 mx-3 active\"\n                  aria-current=\"page\"\n                  to=\"/addfooddata\"\n                >\n                  Add Product\n                </Link>\n              </> : \"\"}\n              {adminChek === \"true\" ? <>\n                <Link\n                  className=\"nav-link fs-5 mx-3 active\"\n                  aria-current=\"page\"\n                  to=\"/allorders\"\n                >\n                  All Orders\n                </Link>\n              </> : \"\"}\n              {adminChek === \"true\" ? <>\n                <Link\n                  className=\"nav-link fs-5 mx-3 active\"\n                  aria-current=\"page\"\n                  to=\"/productlisting\"\n                >\n                  Product Listing\n                </Link>\n              </> : \"\"}\n\n            </ul>\n            {!localStorage.getItem(\"token\") ? (\n              <form className=\"d-flex\">\n\n                <Link className=\"btn bg-white text-success mx-1 \" to=\"/login\">\n                  Login\n                </Link>\n                <Link className=\"btn bg-white text-success mx-1\" to=\"/signup\">\n                  Signup\n                </Link>\n              </form>\n            ) : (\n              <div>\n                {adminChek === \"true\" ? <>\n                  <div\n                    className=\"btn bg-danger text-white mx-2 \"\n                    onClick={deleteOrders}\n                  >\n                    Delete Orders\n                  </div>\n                </> : \"\"}\n\n                <div\n                  className=\"btn bg-white text-success2 mx-2 \"\n                  onClick={loadCart}\n                >\n                  <Badge color=\"secondary\" badgeContent={items.length}>\n                    <ShoppingCartIcon color=\"red\" />\n                  </Badge>\n                  Cart\n                </div>\n\n                {cartView ? (\n                  <Modal onClose={() => setCartView(false)}>\n                    <Cart></Cart>\n                  </Modal>\n                ) : (\n                  \"\"\n                )}\n\n                <button\n                  onClick={handleLogout}\n                  className=\"btn bg-white text-success2\"\n                >\n                  Logout\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport { toast } from \"react-toastify\";\nexport default function Signup() {\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\",\n  });\n  let [address, setAddress] = useState(\"\");\n  let navigate = useNavigate();\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    let navLocation = () => {\n      return new Promise((res, rej) => {\n        navigator.geolocation.getCurrentPosition(res, rej);\n      });\n    };\n    let latlong = await navLocation().then((res) => {\n      let latitude = res.coords.latitude;\n      let longitude = res.coords.longitude;\n      return [latitude, longitude];\n    });\n\n    let [lat, long] = latlong;\n\n    const response = await fetch(\"https://techtastebackend.onrender.com/api/auth/getlocation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ latlong: { lat, long } }),\n    });\n    const { location } = await response.json();\n\n    setAddress(location);\n    setCredentials({ ...credentials, [e.target.name]: location });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\"https://techtastebackend.onrender.com/api/auth/createuser\", {\n      // credentials: 'include',\n      // Origin:\"http://localhost:3000/login\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: credentials.name,\n        email: credentials.email,\n        password: credentials.password,\n        location: credentials.geolocation,\n      }),\n    });\n    const json = await response.json();\n\n    if (json.success) {\n      //save the auth toke to local storage and redirect\n      localStorage.setItem(\"token\", json.authToken);\n      navigate(\"/login\");\n    } else {\n      alert(\"Something went wrong\")\n    }\n  };\n\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div\n      style={{\n        backgroundImage:\n          'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n        backgroundSize: \"cover\",\n        height: \"100vh\",\n      }}\n    >\n      <div>\n        <Navbar />\n      </div>\n\n      <div className=\"container\">\n        <form\n          className=\"w-50 m-auto mt-5 border bg-dark border-success rounded\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"m-3\">\n            <label htmlFor=\"name\" className=\"form-label text-light\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"name\"\n              value={credentials.name}\n              onChange={onChange}\n              aria-describedby=\"emailHelp\"\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"email\" className=\"form-label text-light\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              name=\"email\"\n              value={credentials.email}\n              onChange={onChange}\n              aria-describedby=\"emailHelp\"\n            />\n          </div>\n          <div className=\"m-3\">\n            <label htmlFor=\"address\" className=\"form-label text-light\">\n              Address\n            </label>\n            <fieldset>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"address\"\n                placeholder='\"Click below for fetching address\"'\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                aria-describedby=\"emailHelp\"\n              />\n            </fieldset>\n          </div>\n          <div className=\"m-3\">\n            <button\n              type=\"button\"\n              onClick={handleClick}\n              name=\"geolocation\"\n              className=\" btn btn-success\"\n            >\n              Click for current Location{\" \"}\n            </button>\n          </div>\n          <div className=\"m-3\">\n            <label\n              htmlFor=\"exampleInputPassword1\"\n              className=\"form-label text-light\"\n            >\n              Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              value={credentials.password}\n              onChange={onChange}\n              name=\"password\"\n            />\n          </div>\n          <button type=\"submit\" className=\"m-3 btn btn-success\">\n            Submit\n          </button>\n          <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger\">\n            Already a user\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":["MODAL_STYLES","position","top","left","backgroundColor","transform","zIndex","height","width","OVERLAY_STYLES","right","bottom","Modal","children","onClose","ReactDom","style","className","marginLeft","marginTop","onClick","document","getElementById","Cart","useRazorpay","Razorpay","navigate","useNavigate","data","useCart","dispatch","useDispatchCart","length","handleCheckOut","userEmail","localStorage","getItem","fetch","method","headers","body","JSON","stringify","order_data","email","order_date","Date","toDateString","response","console","log","status","type","toast","PaymentStartFunc","amount","axios","amountInRupees","isNaN","then","res","orderId","orderData","order","id","razorpay_order_id","alert","open","catch","err","totalPrice","reduce","total","food","price","scope","map","index","name","qty","size","Delete","Navbar","props","useState","cartView","setCartView","setItem","adminChek","deleteOrders","window","confirm","location","reload","items","boxShadow","filter","to","Badge","color","badgeContent","ShoppingCart","removeItem","Signup","password","geolocation","credentials","setCredentials","address","setAddress","handleClick","e","preventDefault","navLocation","Promise","rej","navigator","getCurrentPosition","coords","latitude","longitude","latlong","lat","long","json","target","handleSubmit","success","authToken","onChange","value","backgroundImage","backgroundSize","onSubmit","htmlFor","placeholder"],"sourceRoot":""}